{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Projects\\\\shopper-template-react\\\\src\\\\crud-operations\\\\crud-edit.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CrudEdit({\n  params,\n  navigate\n}) {\n  _s();\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [stock, setStock] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    const updatedProduct = {\n      Name: name,\n      Price: price,\n      Stock: stock\n    };\n    axios.put(`http://127.0.0.1:8080/updateproduct/${params.id}`, updatedProduct).then(response => {\n      alert(\"Record Updated Successfully\");\n      navigate(\"/products\");\n    }).catch(error => {\n      console.error('Error updating product:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: \"Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"price\",\n        value: price,\n        onChange: e => setPrice(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"stock\",\n        children: \"Stock:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"stock\",\n        value: stock,\n        onChange: e => setStock(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(CrudEdit, \"uGC5JMwFtbDbt7zq12mIOaLYkTs=\");\n_c = CrudEdit;\nexport default CrudEdit;\n\n// import { Formik, Form, Field, ErrorMessage } from \"formik\"\n// import * as yup from \"yup\"\n// import { useNavigate, Link, useParams } from \"react-router-dom\"\n// import axios from \"axios\"\n// import { useEffect, useState } from \"react\"\n\n// export function CrudEdit() {\n//     const navigate = useNavigate();\n//     const params = useParams();\n//     const [products, setProducts] = useState([{ ProductID: 0, Name: \"\", Price: 0, Stock: true }]);\n\n// function HandleProductChange(e){\n//     setProducts(e.target.value);\n//     }\n\n//     useEffect(() => {\n//         axios({\n//             method: \"get\",\n//             url: `http://127.0.0.1:8080/details/${params.id}`\n\n//         }).then((response) => {\n//             setProducts(response.data)\n//             // alert(\"Record Updated Successfully\")\n//             // navigate(\"/products\")\n//         })\n//     }, [])\n\n//     return (\n//         <div className=\"container-fluid\">\n//             <h2>Update Product</h2>\n//             <Formik\n//                 initialValues={{\n//                     ProductID: products.ProductID,\n//                     Name: products.Name,\n//                     Price: products.Price,\n//                     Stock: products.Stock\n//                 }}\n//                 // validationSchema={\n//                 //     yup.object({\n//                 //         Name: yup\n//                 //             .string()\n//                 //             .required(\"Name is Required\"),\n//                 //         Price: yup\n//                 //             .number()\n//                 //             .min(1)\n//                 //             .required(\"Password is Required\"),\n//                 //         Stock: yup\n//                 //             .boolean()\n//                 //             .required(\"Stock is Required\")\n//                 //     })\n//                 // }\n//                 onsubmit={\n//                     (values) => {\n//                         axios({\n//                             method: \"put\",\n//                             url: `http://127.0.0.1:8080/updateproduct/${params.id}`,\n//                             data: values\n//                         }).then((response) => {\n//                             setProducts(products.Name)\n//                             setProducts(products.Price)\n//                             setProducts(products.Stock)\n//                             alert(\"Record Updated Successfully\")\n//                             navigate(\"/products\")\n//                         })\n//                     }}\n\n//             >\n//                 <Form>\n//                     <dl>\n\n//                         <dt>Name</dt>\n//                         <dd><Field type=\"text\" onChange={HandleProductChange} name=\"Name\" value={products[0].Name} /></dd>\n//                         <dd className=\"text-danger\"><ErrorMessage name=\"Name\" /></dd>\n//                         <dt>Price</dt>\n//                         <dd><Field type=\"number\" onChange={HandleProductChange} name=\"Price\" value={products[0].Price} /></dd>\n//                         <dd className=\"text-danger\"><ErrorMessage name=\"Price\" /></dd>\n//                         <dt>Stock</dt>\n//                         <dd className=\"form-switch\"><Field className=\"form-check-input\" type=\"checkbox\" name=\"Stock\" checked={products[0].Stock} />Available</dd>\n//                         <dd className=\"text-danger\"><ErrorMessage name=\"Stock\" /></dd>\n\n//                     </dl>\n//                     <button type=\"submit\" className=\"btn btn-success px-4\">Save</button>\n//                     <Link className=\"ms-3\" to=\"/products\">View Products</Link>\n//                 </Form>\n//             </Formik>\n//         </div>\n//     )\n// }\nvar _c;\n$RefreshReg$(_c, \"CrudEdit\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CrudEdit","params","navigate","_s","name","setName","price","setPrice","stock","setStock","handleSubmit","e","preventDefault","updatedProduct","Name","Price","Stock","put","id","then","response","alert","catch","error","console","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","_c","$RefreshReg$"],"sources":["D:/My Projects/shopper-template-react/src/crud-operations/crud-edit.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport function CrudEdit({ params, navigate }) {\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [stock, setStock] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const updatedProduct = {\r\n      Name: name,\r\n      Price: price,\r\n      Stock: stock\r\n    };\r\n\r\n    axios.put(`http://127.0.0.1:8080/updateproduct/${params.id}`, updatedProduct)\r\n      .then((response) => {\r\n        alert(\"Record Updated Successfully\");\r\n        navigate(\"/products\");\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error updating product:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"name\">Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"price\">Price:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"price\"\r\n          value={price}\r\n          onChange={(e) => setPrice(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"stock\">Stock:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"stock\"\r\n          value={stock}\r\n          onChange={(e) => setStock(e.target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Update Product</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CrudEdit;\r\n\r\n\r\n\r\n// import { Formik, Form, Field, ErrorMessage } from \"formik\"\r\n// import * as yup from \"yup\"\r\n// import { useNavigate, Link, useParams } from \"react-router-dom\"\r\n// import axios from \"axios\"\r\n// import { useEffect, useState } from \"react\"\r\n\r\n\r\n\r\n// export function CrudEdit() {\r\n//     const navigate = useNavigate();\r\n//     const params = useParams();\r\n//     const [products, setProducts] = useState([{ ProductID: 0, Name: \"\", Price: 0, Stock: true }]);\r\n\r\n// function HandleProductChange(e){\r\n//     setProducts(e.target.value);\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//         axios({\r\n//             method: \"get\",\r\n//             url: `http://127.0.0.1:8080/details/${params.id}`\r\n\r\n//         }).then((response) => {\r\n//             setProducts(response.data)\r\n//             // alert(\"Record Updated Successfully\")\r\n//             // navigate(\"/products\")\r\n//         })\r\n//     }, [])\r\n\r\n//     return (\r\n//         <div className=\"container-fluid\">\r\n//             <h2>Update Product</h2>\r\n//             <Formik\r\n//                 initialValues={{\r\n//                     ProductID: products.ProductID,\r\n//                     Name: products.Name,\r\n//                     Price: products.Price,\r\n//                     Stock: products.Stock\r\n//                 }}\r\n//                 // validationSchema={\r\n//                 //     yup.object({\r\n//                 //         Name: yup\r\n//                 //             .string()\r\n//                 //             .required(\"Name is Required\"),\r\n//                 //         Price: yup\r\n//                 //             .number()\r\n//                 //             .min(1)\r\n//                 //             .required(\"Password is Required\"),\r\n//                 //         Stock: yup\r\n//                 //             .boolean()\r\n//                 //             .required(\"Stock is Required\")\r\n//                 //     })\r\n//                 // }\r\n//                 onsubmit={\r\n//                     (values) => {\r\n//                         axios({\r\n//                             method: \"put\",\r\n//                             url: `http://127.0.0.1:8080/updateproduct/${params.id}`,\r\n//                             data: values\r\n//                         }).then((response) => {\r\n//                             setProducts(products.Name)\r\n//                             setProducts(products.Price)\r\n//                             setProducts(products.Stock)\r\n//                             alert(\"Record Updated Successfully\")\r\n//                             navigate(\"/products\")\r\n//                         })\r\n//                     }}\r\n\r\n\r\n\r\n//             >\r\n//                 <Form>\r\n//                     <dl>\r\n\r\n//                         <dt>Name</dt>\r\n//                         <dd><Field type=\"text\" onChange={HandleProductChange} name=\"Name\" value={products[0].Name} /></dd>\r\n//                         <dd className=\"text-danger\"><ErrorMessage name=\"Name\" /></dd>\r\n//                         <dt>Price</dt>\r\n//                         <dd><Field type=\"number\" onChange={HandleProductChange} name=\"Price\" value={products[0].Price} /></dd>\r\n//                         <dd className=\"text-danger\"><ErrorMessage name=\"Price\" /></dd>\r\n//                         <dt>Stock</dt>\r\n//                         <dd className=\"form-switch\"><Field className=\"form-check-input\" type=\"checkbox\" name=\"Stock\" checked={products[0].Stock} />Available</dd>\r\n//                         <dd className=\"text-danger\"><ErrorMessage name=\"Stock\" /></dd>\r\n\r\n//                     </dl>\r\n//                     <button type=\"submit\" className=\"btn btn-success px-4\">Save</button>\r\n//                     <Link className=\"ms-3\" to=\"/products\">View Products</Link>\r\n//                 </Form>\r\n//             </Formik>\r\n//         </div>\r\n//     )\r\n// }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}