{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toBeEmptyDOMElement = toBeEmptyDOMElement;\nvar _utils = require(\"./utils\");\nfunction toBeEmptyDOMElement(element) {\n  (0, _utils.checkHtmlElement)(element, toBeEmptyDOMElement, this);\n  return {\n    pass: isEmptyElement(element),\n    message: () => {\n      return [this.utils.matcherHint(\"\".concat(this.isNot ? '.not' : '', \".toBeEmptyDOMElement\"), 'element', ''), '', 'Received:', \"  \".concat(this.utils.printReceived(element.innerHTML))].join('\\n');\n    }\n  };\n}\n\n/**\n * Identifies if an element doesn't contain child nodes (excluding comments)\n * ℹ Node.COMMENT_NODE can't be used because of the following issue \n * https://github.com/jsdom/jsdom/issues/2220\n *\n * @param {*} element an HtmlElement or SVGElement\n * @return {*} true if the element only contains comments or none\n */\nfunction isEmptyElement(element) {\n  const nonCommentChildNodes = [...element.childNodes].filter(node => node.nodeType !== 8);\n  return nonCommentChildNodes.length === 0;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","toBeEmptyDOMElement","_utils","require","element","checkHtmlElement","pass","isEmptyElement","message","utils","matcherHint","concat","isNot","printReceived","innerHTML","join","nonCommentChildNodes","childNodes","filter","node","nodeType","length"],"sources":["D:/My Projects/shopper-template-react/node_modules/@testing-library/jest-dom/dist/to-be-empty-dom-element.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toBeEmptyDOMElement = toBeEmptyDOMElement;\nvar _utils = require(\"./utils\");\nfunction toBeEmptyDOMElement(element) {\n  (0, _utils.checkHtmlElement)(element, toBeEmptyDOMElement, this);\n  return {\n    pass: isEmptyElement(element),\n    message: () => {\n      return [this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toBeEmptyDOMElement`, 'element', ''), '', 'Received:', `  ${this.utils.printReceived(element.innerHTML)}`].join('\\n');\n    }\n  };\n}\n\n/**\n * Identifies if an element doesn't contain child nodes (excluding comments)\n * ℹ Node.COMMENT_NODE can't be used because of the following issue \n * https://github.com/jsdom/jsdom/issues/2220\n *\n * @param {*} element an HtmlElement or SVGElement\n * @return {*} true if the element only contains comments or none\n */\nfunction isEmptyElement(element) {\n  const nonCommentChildNodes = [...element.childNodes].filter(node => node.nodeType !== 8);\n  return nonCommentChildNodes.length === 0;\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,mBAAmB,GAAGA,mBAAmB;AACjD,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAS,CAAC;AAC/B,SAASF,mBAAmBA,CAACG,OAAO,EAAE;EACpC,CAAC,CAAC,EAAEF,MAAM,CAACG,gBAAgB,EAAED,OAAO,EAAEH,mBAAmB,EAAE,IAAI,CAAC;EAChE,OAAO;IACLK,IAAI,EAAEC,cAAc,CAACH,OAAO,CAAC;IAC7BI,OAAO,EAAEA,CAAA,KAAM;MACb,OAAO,CAAC,IAAI,CAACC,KAAK,CAACC,WAAW,IAAAC,MAAA,CAAI,IAAI,CAACC,KAAK,GAAG,MAAM,GAAG,EAAE,2BAAwB,SAAS,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,WAAW,OAAAD,MAAA,CAAO,IAAI,CAACF,KAAK,CAACI,aAAa,CAACT,OAAO,CAACU,SAAS,CAAC,EAAG,CAACC,IAAI,CAAC,IAAI,CAAC;IACnL;EACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASR,cAAcA,CAACH,OAAO,EAAE;EAC/B,MAAMY,oBAAoB,GAAG,CAAC,GAAGZ,OAAO,CAACa,UAAU,CAAC,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,KAAK,CAAC,CAAC;EACxF,OAAOJ,oBAAoB,CAACK,MAAM,KAAK,CAAC;AAC1C","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}