{"ast":null,"code":"var _jsxFileName = \"D:\\\\shopper-template-react\\\\src\\\\crud-operations\\\\crud-edit.js\",\n  _s = $RefreshSig$();\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as yup from \"yup\";\nimport { useNavigate, Link, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CrudEdit() {\n  _s();\n  const navigate = useNavigate();\n  const params = useParams();\n  const [products, setProducts] = useState([{}]);\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: `http://127.0.0.1:8080/details/${params.id}`\n    }).then(response => {\n      setProducts(response.data);\n      // alert(\"Record Updated Successfully\")\n      // navigate(\"/products\")\n    });\n  }, [params.id]);\n  function HandleProductChange(e) {\n    setProducts(e.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        ProductID: products.ProductID,\n        Name: products.Name,\n        Price: products.Price,\n        Stock: products.Stock\n      }\n      // validationSchema={\n      //     yup.object({\n      //         Name: yup\n      //             .string()\n      //             .required(\"Name is Required\"),\n      //         Price: yup\n      //             .number()\n      //             .min(1)\n      //             .required(\"Password is Required\"),\n      //         Stock: yup\n      //             .boolean()\n      //             .required(\"Stock is Required\")\n      //     })\n      // }\n      ,\n      onsubmit: values => {\n        axios({\n          method: \"put\",\n          url: `http://127.0.0.1:8080/updateproduct`,\n          data: values\n        }).then(response => {\n          // setProducts(products.Name)\n          // setProducts(products.Price)\n          // setProducts(products.Stock)\n          alert(\"Record Updated Successfully\");\n          navigate(\"/products\");\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"dl\", {\n          children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              onChange: HandleProductChange,\n              name: \"Name\",\n              value: products[0].Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"dt\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              type: \"number\",\n              onChange: HandleProductChange,\n              name: \"Price\",\n              value: products[0].Price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"dt\", {\n            children: \"Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n            className: \"form-switch\",\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-check-input\",\n              type: \"checkbox\",\n              name: \"Stock\",\n              checked: products[0].Stock\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), \"Available\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onChange: HandleProductChange,\n          children: \"Svae\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"ms-3\",\n          to: \"/products\",\n          children: \"View Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(CrudEdit, \"+6NMp8itejK5oEr5DkR1lrlmSJI=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = CrudEdit;\nvar _c;\n$RefreshReg$(_c, \"CrudEdit\");","map":{"version":3,"names":["Formik","Form","Field","ErrorMessage","yup","useNavigate","Link","useParams","axios","useEffect","useState","jsxDEV","_jsxDEV","CrudEdit","_s","navigate","params","products","setProducts","method","url","id","then","response","data","HandleProductChange","e","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","ProductID","Name","Price","Stock","onsubmit","values","alert","type","onChange","name","checked","to","_c","$RefreshReg$"],"sources":["D:/shopper-template-react/src/crud-operations/crud-edit.js"],"sourcesContent":["import { Formik, Form, Field, ErrorMessage } from \"formik\"\r\nimport * as yup from \"yup\"\r\nimport { useNavigate, Link, useParams } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\n\r\n\r\nexport function CrudEdit() {\r\n    const navigate = useNavigate();\r\n    const params = useParams();\r\n    const [products, setProducts] = useState([{}]);\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: \"get\",\r\n            url: `http://127.0.0.1:8080/details/${params.id}`\r\n\r\n        }).then((response) => {\r\n            setProducts(response.data)\r\n            // alert(\"Record Updated Successfully\")\r\n            // navigate(\"/products\")\r\n        })\r\n    }, [params.id])\r\n\r\n    function HandleProductChange(e) {\r\n        setProducts(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <h2>Update Product</h2>\r\n            <Formik\r\n                initialValues={{\r\n                    ProductID: products.ProductID,\r\n                    Name: products.Name,\r\n                    Price: products.Price,\r\n                    Stock: products.Stock\r\n                }}\r\n                // validationSchema={\r\n                //     yup.object({\r\n                //         Name: yup\r\n                //             .string()\r\n                //             .required(\"Name is Required\"),\r\n                //         Price: yup\r\n                //             .number()\r\n                //             .min(1)\r\n                //             .required(\"Password is Required\"),\r\n                //         Stock: yup\r\n                //             .boolean()\r\n                //             .required(\"Stock is Required\")\r\n                //     })\r\n                // }\r\n                onsubmit={\r\n                    (values) => {\r\n                        axios({\r\n                            method: \"put\",\r\n                            url: `http://127.0.0.1:8080/updateproduct`,\r\n                            data: values\r\n                        }).then((response) => {\r\n                            // setProducts(products.Name)\r\n                            // setProducts(products.Price)\r\n                            // setProducts(products.Stock)\r\n                            alert(\"Record Updated Successfully\")\r\n                            navigate(\"/products\")\r\n                        })\r\n                    }\r\n                }\r\n            >\r\n                <Form>\r\n                    <dl>\r\n\r\n                        <dt>Name</dt>\r\n                        <dd><Field type=\"text\"\r\n                            onChange={HandleProductChange} name=\"Name\"\r\n                            value={products[0].Name} />\r\n                        </dd>\r\n\r\n                        <dt>Price</dt>\r\n                        <dd><Field type=\"number\"\r\n                            onChange={HandleProductChange} name=\"Price\"\r\n                            value={products[0].Price} />\r\n                        </dd>\r\n\r\n                        <dt>Stock</dt>\r\n                        <dd className=\"form-switch\">\r\n                            <Field className=\"form-check-input\" type=\"checkbox\" name=\"Stock\"\r\n                                checked={products[0].Stock} />Available</dd>\r\n                    </dl>\r\n                    <button className=\"btn btn-primary\" onChange={HandleProductChange} >Svae</button>\r\n                    <Link className=\"ms-3\" to=\"/products\">View Products</Link>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}