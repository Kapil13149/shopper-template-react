{"ast":null,"code":"var _jsxFileName = \"D:\\\\shopper-template-react\\\\src\\\\Shopper-Register\\\\shopper-register.js\";\nimport { useFormik, Formik, Form, Field, ErrorMessage } from \"formik\";\nimport axios from \"axios\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ShopperRegister() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Register User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        UserId: \"\",\n        UserName: \"\",\n        Password: \"\",\n        Email: \"\",\n        Age: 0,\n        Mobile: \"\"\n      },\n      validationSchema: yup.object({\n        UserId: yup.string().required(\"UserId is required\"),\n        UserName: yup.string().required(\"UserName is required\"),\n        Password: yup.string().required(\"Password is required\").matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/).min(8),\n        Email: yup.string().email(\"Invalid email address\"),\n        Age: yup.number().required(\"Age is required\"),\n        Mobile: yup.string().required(\"Mobile is required\").matches(/^(\\+\\d{1,3}[- ]?)?\\d{10}$/)\n      }),\n      onSubmit: values => {\n        axios({\n          method: \"post\",\n          url: \"https://127.0.0.1:27017/registeruser\",\n          data: values\n        }).then(response => {\n          alert(\"Register Successfully..\");\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(\"dl\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n_c = ShopperRegister;\nvar _c;\n$RefreshReg$(_c, \"ShopperRegister\");","map":{"version":3,"names":["useFormik","Formik","Form","Field","ErrorMessage","axios","yup","jsxDEV","_jsxDEV","ShopperRegister","className","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","UserId","UserName","Password","Email","Age","Mobile","validationSchema","object","string","required","matches","min","email","number","onSubmit","values","method","url","data","then","response","alert","_c","$RefreshReg$"],"sources":["D:/shopper-template-react/src/Shopper-Register/shopper-register.js"],"sourcesContent":["import { useFormik, Formik, Form, Field, ErrorMessage } from \"formik\"\r\nimport axios from \"axios\"\r\nimport * as yup from \"yup\"\r\nexport function ShopperRegister() {\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <h3>Register User</h3>\r\n            <Formik\r\n                initialValues={{\r\n                    UserId: \"\",\r\n                    UserName: \"\",\r\n                    Password: \"\",\r\n                    Email: \"\",\r\n                    Age: 0,\r\n                    Mobile: \"\"\r\n                }}\r\n                validationSchema={yup.object({\r\n                    UserId: yup\r\n                        .string()\r\n                        .required(\"UserId is required\"),\r\n                    UserName: yup\r\n                        .string()\r\n                        .required(\"UserName is required\"),\r\n                    Password: yup\r\n                        .string()\r\n                        .required(\"Password is required\")\r\n                        .matches(\r\n                            /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n                        )\r\n                        .min(8),\r\n                    Email: yup\r\n                        .string()\r\n                        .email(\"Invalid email address\"),\r\n                    Age: yup\r\n                        .number()\r\n                        .required(\"Age is required\"),\r\n                    Mobile: yup\r\n                        .string()\r\n                        .required(\"Mobile is required\")\r\n                        .matches(\r\n                            /^(\\+\\d{1,3}[- ]?)?\\d{10}$/,\r\n                        )\r\n                })}\r\n\r\n                onSubmit={\r\n                    (values) => {\r\n                        axios({\r\n                            method: \"post\",\r\n                            url: \"https://127.0.0.1:27017/registeruser\",\r\n                            data: values\r\n                        })\r\n                        .then((response) => {\r\n                            alert(\"Register Successfully..\");\r\n                        })\r\n                }}\r\n\r\n            >\r\n            {\r\n                <Form>\r\n                <dl>\r\n                    \r\n                </dl>\r\n                </Form>\r\n            }\r\n\r\n            </Formik>\r\n\r\n\r\n        </div>\r\n    )\r\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,YAAY,QAAQ,QAAQ;AACrE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC1B,OAAO,SAASC,eAAeA,CAAA,EAAG;EAC9B,oBACID,OAAA;IAAKE,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5BH,OAAA;MAAAG,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBP,OAAA,CAACP,MAAM;MACHe,aAAa,EAAE;QACXC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,GAAG,EAAE,CAAC;QACNC,MAAM,EAAE;MACZ,CAAE;MACFC,gBAAgB,EAAEjB,GAAG,CAACkB,MAAM,CAAC;QACzBP,MAAM,EAAEX,GAAG,CACNmB,MAAM,CAAC,CAAC,CACRC,QAAQ,CAAC,oBAAoB,CAAC;QACnCR,QAAQ,EAAEZ,GAAG,CACRmB,MAAM,CAAC,CAAC,CACRC,QAAQ,CAAC,sBAAsB,CAAC;QACrCP,QAAQ,EAAEb,GAAG,CACRmB,MAAM,CAAC,CAAC,CACRC,QAAQ,CAAC,sBAAsB,CAAC,CAChCC,OAAO,CACJ,gEACJ,CAAC,CACAC,GAAG,CAAC,CAAC,CAAC;QACXR,KAAK,EAAEd,GAAG,CACLmB,MAAM,CAAC,CAAC,CACRI,KAAK,CAAC,uBAAuB,CAAC;QACnCR,GAAG,EAAEf,GAAG,CACHwB,MAAM,CAAC,CAAC,CACRJ,QAAQ,CAAC,iBAAiB,CAAC;QAChCJ,MAAM,EAAEhB,GAAG,CACNmB,MAAM,CAAC,CAAC,CACRC,QAAQ,CAAC,oBAAoB,CAAC,CAC9BC,OAAO,CACJ,2BACJ;MACR,CAAC,CAAE;MAEHI,QAAQ,EACHC,MAAM,IAAK;QACR3B,KAAK,CAAC;UACF4B,MAAM,EAAE,MAAM;UACdC,GAAG,EAAE,sCAAsC;UAC3CC,IAAI,EAAEH;QACV,CAAC,CAAC,CACDI,IAAI,CAAEC,QAAQ,IAAK;UAChBC,KAAK,CAAC,yBAAyB,CAAC;QACpC,CAAC,CAAC;MACV,CAAE;MAAA3B,QAAA,eAIFH,OAAA,CAACN,IAAI;QAAAS,QAAA,eACLH,OAAA;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGR,CAAC;AAEd;AAACwB,EAAA,GAnEe9B,eAAe;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}