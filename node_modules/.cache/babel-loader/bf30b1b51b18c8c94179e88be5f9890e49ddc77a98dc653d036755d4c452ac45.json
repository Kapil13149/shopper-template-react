{"ast":null,"code":"var _jsxFileName = \"D:\\\\shopper-template-react\\\\src\\\\Shopper-Login\\\\shopper-login.js\",\n  _s = $RefreshSig$();\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport axios from \"axios\";\nimport * as yup from \"yup\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ShopperLogin() {\n  _s();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        UserId: \"\",\n        Password: \"\"\n      },\n      onSubmit: values => {\n        axios({\n          method: \"get\",\n          url: \"http://127.0.0.1:5000/users\"\n        }).then(response => {\n          for (var user of response.data) {\n            if (user.userId == values.UserId && user.password == values.Password) {\n              navigate(\"/home\");\n              break;\n            } else {\n              navigate(\"/invalid\");\n            }\n          }\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"dl\", {\n          children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n            children: \"UserId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              name: \"userId\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"dt\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              type: \"password\",\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_s(ShopperLogin, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = ShopperLogin;\nvar _c;\n$RefreshReg$(_c, \"ShopperLogin\");","map":{"version":3,"names":["Formik","Form","Field","ErrorMessage","axios","yup","useNavigate","jsxDEV","_jsxDEV","ShopperLogin","_s","navigate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","UserId","Password","onSubmit","values","method","url","then","response","user","data","userId","password","type","name","_c","$RefreshReg$"],"sources":["D:/shopper-template-react/src/Shopper-Login/shopper-login.js"],"sourcesContent":["import { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport axios from \"axios\";\r\nimport * as yup from \"yup\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport function ShopperLogin() {\r\n    const navigate = useNavigate();\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <h2>User Login</h2>\r\n            <Formik\r\n                initialValues={{\r\n                    UserId: \"\",\r\n                    Password: \"\",\r\n                }}\r\n                onSubmit={\r\n                    (values) => {\r\n                        axios({\r\n                            method: \"get\",\r\n                            url: \"http://127.0.0.1:5000/users\",\r\n                        })\r\n                            .then((response) => {\r\n                                for (var user of response.data) {\r\n                                    if (user.userId == values.UserId && user.password == values.Password) {\r\n                                        navigate(\"/home\");\r\n                                        break;\r\n                                    } else {\r\n                                        navigate(\"/invalid\");\r\n                                    }\r\n                                }\r\n                            })\r\n                    }}\r\n            >\r\n                {\r\n                    <Form>\r\n                        <dl>\r\n                            <dt>UserId</dt>\r\n                            <dd><Field type=\"text\" name=\"userId\" /></dd>\r\n\r\n                            <dt>Password</dt>\r\n                            <dd><Field type=\"password\" name=\"password\" /></dd>\r\n                        </dl>\r\n\r\n                        <button className=\"btn btn-success\" type=\"submit\">Login</button>\r\n                    </Form>\r\n                }\r\n\r\n            </Formik>\r\n\r\n\r\n        </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}